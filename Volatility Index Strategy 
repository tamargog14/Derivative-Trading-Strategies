#********* Volatility Index Strategy **********

#import needed packages
import pandas as pd
import numpy as np 
import matplotlib.pyplot as plt
import math 
import quandl

#quandl data with personal access account
def get_data(asset, access, date, file): 
    inp = quandl.get(asset, authtoken = access, start_date = date)
    inp.to_csv(file)
    inp = pd.read_csv(file)
    return inp

#data pulled directly
#***********************************
data_1 = get_data("CHRIS/CME_SP1", "pEcAySxQawf4XEndRVHL", "2015-1-1", '/Users/gregtamargo/Documents/Python Projects/Derivative Trading Strategies/Strategy 1/Futures.csv') 
data_2 = get_data("CHRIS/CBOE_VX3", "pEcAySxQawf4XEndRVHL", "2015-1-1", '/Users/gregtamargo/Documents/Python Projects/Derivative Trading Strategies/Strategy 1/VIX.csv')
#***********************************
data_1
data_2
data_1['VIX'] = data_2['Close']
data_1['Futures'] = data_1['Last']
data = data_1[:1178]
data

#initialize variables 
details = list()
order = list() #Buy/Sell/Ignore
profit = list()
mtm = list()
buy_or_sell = list()
stop_loss_limit = list()

#initialize variables 
V = 0 #price to buy S&P Futures at particular VIX level
profit_variable = 0 

#VIX threshold
threshold = 24

#as a percent of purchase price for (stop loss order & take profit order)
stop_loss_perc = 5
take_profit_perc = 5 #also known as limit order

buy_flag = False
sell_flag = True

#value above sell order in successful trade
val_above = (1 + (take_profit_perc)/float(100)) 
#value below sell order will execute in stop loss
val_below = (1 - (stop_loss_perc)/float(100))

# size of VIX dataset
size = data['Futures'].size  

for i in range(size): 
    profit_variable = 0

    if(data['VIX'][i] >= threshold and (not buy_flag)):
        details = [-1, "Buy" , "0", "Position Taken"]
        buy_flag = True
        sell_flag = False
        V = data['Futures'][i]

    elif(data['Futures'][i] >= val_above * V and (not sell_flag)):
        buy_flag = False
        sell_flag = True
        profit_variable = (data['Futures'][i] - V)
        details = [1, "Sell", "0", "Position Closed"]

    elif(data['Futures'][i] <= (val_below) * V and (not sell_flag)):
        buy_flag = False
        sell_flag = True
        profit_variable = (data['Futures'][i] - V)
        details = [1, "Sell", "Stoploss Executed", "Position Closed"]

    else:
        if(buy_flag == 1):
            x = (data['Futures'][i] - V)* 500 * 2
        else:
            x = "0"
        details = [0, "No Trade", "0", x]

    profit.append(profit_variable)
    order.append(details[0])
    buy_or_sell.append(details[1])
    stop_loss_limit.append(details[2])
    mtm.append(details[3])


data['Order_Placed'] = pd.Series(order)

#cost per transaction 
data['Cost'] = - ((data['Order_Placed'].multiply(data['Futures'])) * 500 * 2)

#cumulative cost profit/loss after transaction to date
data['Diff'] = data['Cost'].cumsum()

data['Buy_Sell'] = pd.Series(buy_or_sell)
data['profit'] = -pd.Series(profit) * 500 * 2
data['StopLoss'] = pd.Series(stop_loss_limit)
data['MTM'] = pd.Series(mtm)
data

print(data['Diff'])
plt.plot(data['Diff'])

#store final in dataframe
final = pd.DataFrame()
final['Date'] = data['Date']
final['Close'] = data['Futures']
final['VIX'] = data['VIX']
final['Order_Placed'] = data['Order_Placed']
final['Buy_Sell'] = data['Buy_Sell']
final['profit'] = data['profit'] 
final['StopLoss'] = data['StopLoss']
final['MTM'] = data['MTM']
plt.plot(data['Diff'])

final.to_excel('VIX_final.xlsx', sheet_name='Sheet1')